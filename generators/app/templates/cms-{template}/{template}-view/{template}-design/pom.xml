<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <name>ALG CMS Site TEMPLATE View > Design</name>
    <description>This is a CQ Package Project, where designs are stored </description>

    <parent>
        <artifactId>template-view</artifactId>
        <groupId>com.alg.cms.template</groupId>
        <version>0.0.1</version>
    </parent>

    <artifactId>template-design</artifactId>

    <build>
        <plugins>
            <plugin>
                <groupId>com.day.jcr.vault</groupId>
                <artifactId>content-package-maven-plugin</artifactId>
                <configuration>
					<filters>
						<filter>
							<root>/etc/designs/site/template</root>
							<mode>replace</mode>
						</filter>
						<filter>
							<root>/etc/languages</root>
							<mode>replace</mode>
						</filter>
					</filters>
				</configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>xml-maven-plugin</artifactId>
            </plugin>

			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<!-- optional -->
				<!-- <configuration> -->
					<!-- <workingDirectory>_playground</workingDirectory> -->
				<!-- </configuration> -->

				<executions>
					<execution>
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<phase>generate-resources</phase>
						<configuration>
							<nodeVersion>v0.10.33</nodeVersion>
							<npmVersion>1.3.8</npmVersion>
							<!-- optional: where to download node and npm from. Defaults to http://nodejs.org/dist/ -->
							<!-- <downloadRoot>http://myproxy.example.org/nodejs/dist/</downloadRoot> -->
						</configuration>
					</execution>

					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<phase>generate-resources</phase>
						<!-- <configuration> -->
							<!-- optional: The default argument is actually
							"install", so unless you need to run some other npm command,
							you can remove this whole <configuration> section.
							-->
							<!-- <arguments>install</arguments> -->
						<!-- </configuration> -->
					</execution>

					<execution>
						<id>gulp build</id>
						<goals>
							<goal>gulp</goal>
						</goals>
						<phase>generate-resources</phase>
						<!-- <configuration> -->
							<!-- optional: if not specified, it will run gulp's default
							task (and you can remove this whole <configuration> section.) -->
							<!-- <arguments>build</arguments> -->
						<!-- </configuration> -->
					</execution>
				</executions>
			</plugin>

			<!--<plugin>-->
				<!--<groupId>com.kelveden</groupId>-->
				<!--<artifactId>maven-karma-plugin</artifactId>-->
				<!--<version>1.6</version>-->
				<!--<executions>-->
					<!--<execution>-->
						<!--<phase>process-test-classes</phase>-->
						<!--<goals>-->
							<!--<goal>start</goal>-->
						<!--</goals>-->
					<!--</execution>-->
				<!--</executions>-->
				<!--<dependencies>-->
					<!--<dependency>-->
						<!--<groupId>commons-io</groupId>-->
						<!--<artifactId>commons-io</artifactId>-->
						<!--<version>2.4</version>-->
					<!--</dependency>-->
					<!--<dependency>-->
						<!--<groupId>org.fusesource.jansi</groupId>-->
						<!--<artifactId>jansi</artifactId>-->
						<!--<version>1.11</version>-->
					<!--</dependency>-->
				<!--</dependencies>-->

				<!--<configuration>-->
					<!--<karmaExecutable>${basedir}/karma.sh</karmaExecutable>-->
					<!--<configFile>${basedir}/karma.conf.js</configFile>-->
					<!--<reportsDirectory>${project.build.directory}/karma-reports</reportsDirectory>-->
					<!--<browsers>PhantomJS</browsers>-->
					<!--<autoWatch>false</autoWatch>-->
					<!--<singleRun>true</singleRun>-->
					<!--<colors>true</colors>-->
					<!--<skipKarma>false</skipKarma>-->
					<!--<skipTests>false</skipTests>-->
					<!--<karmaFailureIgnore>false</karmaFailureIgnore>-->
					<!--<reporters>junit,coverage,dots</reporters>-->
				<!--</configuration>-->
			<!--</plugin>-->
        </plugins>
    </build>
	
</project>